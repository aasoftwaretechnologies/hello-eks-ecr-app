name: Deploy to EKS (Production)

on:
  push:
    branches: [ "master" ]

env:
  AWS_REGION: ap-south-1
  ECR_REPO_NAME: java-app
  EKS_CLUSTER: my-cluster
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    name: Build and Deploy to Production
    runs-on: ubuntu-latest

    environment:
      name: production  # ðŸ‘ˆ Enables prod-specific secrets and approvals

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build App
      run: mvn clean package

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker Image to ECR
      run: |
        IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI

    - name: Update Kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER

    - name: Deploy to EKS
      run: |
        sed -i "s|<AWS_ECR_IMAGE_URI>|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}|g" deployment.yml
        kubectl apply -f deployment.yml
